var app = new Vue({ el: "#app", data: { searchCategories: "Products", searchString: "", productOrderSubmitBtn: null, cartItemCount: 0, btnDisableSubmit: [] }, methods: { updateSearchCategories: function (e) { this.searchCategories = e.target.value }, triggerSearchQuery: function (e) { e.value.length < 2 || "" == this.searchCategories || $.ajax({ type: "POST", url: "/Home/GetQuery", data: { searchString: e.value, searchCategories: app.searchCategories } }).done(function (t) { var r, a, n; e.value; for (app.closeAllLists(), (r = document.createElement("DIV")).setAttribute("id", this.id + "autocomplete-list"), r.setAttribute("class", "autocomplete-items"), e.parentNode.appendChild(r), n = 0; n < t.length; n++)(a = document.createElement("DIV")).innerHTML = t[n], a.innerHTML += "<input type='hidden' value='" + t[n] + "'>", a.addEventListener("click", function (t) { e.value = this.getElementsByTagName("input")[0].value, app.closeAllLists() }), r.appendChild(a) }) }, closeAllLists: function (e) { for (var t = document.getElementsByClassName("autocomplete-items"), r = 0; r < t.length; r++)e != t[r] && t[r].parentNode.removeChild(t[r]) }, submitSearchQuery: function () { $("#insertForm").html('<form action="/Home/StartQuery" name="searchQuery" style="display:none;"><input type="text" name="searchString" value="' + this.searchString + '" /><input type="text" name="searchCategories" value="' + this.searchCategories + '" /></form>'), document.forms.searchQuery.submit() }, cardOrderAdded: function (e) { var t = this.productOrderSubmitBtn.parentElement.parentElement.lastChild.previousElementSibling; e.responseJSON.isSuccess ? (this.getCurrentCartCount(), setTimeout(this.reenableSubmit, 2e3), t.classList.remove("bg-danger"), t.classList.add("bg-success"), t.innerHTML = e.responseJSON.message[0], this.loadCart(), setTimeout(() => { t.innerHTML = "", t.classList.remove("bg-success") }, 2e3)) : (t.classList.remove("bg-success"), t.classList.add("bg-danger"), t.innerHTML = e.responseJSON.message[0], this.productOrderSubmitBtn.disabled = !1, this.productOrderSubmitBtn.innerHTML = "Add To Cart") }, detailsOrderAdded: function (e) { var t = this.productOrderSubmitBtn.parentElement.parentElement.lastChild.previousElementSibling; t.classList.add("alert"), e.responseJSON.isSuccess ? (this.getCurrentCartCount(), setTimeout(this.reenableSubmit, 2e3), t.classList.remove("alert-danger"), t.classList.add("alert-success"), t.innerHTML = e.responseJSON.message[0], this.loadCart(), setTimeout(() => { t.innerHTML = "", t.classList.remove("alert") }, 2e3)) : (t.classList.remove("alert-success"), t.classList.add("alert-danger"), t.innerHTML = e.responseJSON.message[0], this.productOrderSubmitBtn.disabled = !1, this.productOrderSubmitBtn.innerHTML = "Add To Cart") }, orderFormSubmitBtn: function (e) { this.productOrderSubmitBtn = e, console.log(e) }, getCurrentCartCount: function () { $.ajax({ type: "POST", url: "/Order/GetCurrentCartCount", data: {} }).done(function (e) { app.cartItemCount = e }) }, disableSubmit: function () { this.productOrderSubmitBtn.disabled = !0, this.productOrderSubmitBtn.innerHTML = "Added", this.btnDisableSubmit.push(this.productOrderSubmitBtn) }, reenableSubmit: function () { for (i = 0; i < this.btnDisableSubmit.length; i++)this.btnDisableSubmit[i].disabled = !1, this.btnDisableSubmit[i].innerHTML = "Add to Cart" }, loadCart: function () { $.ajax({ type: "POST", url: "/Order/LoadCart", data: {} }).done(function (e) { $("#cartModalContent").html(e) }) }, removeItem: function (e) { $.ajax({ type: "POST", url: "/Order/RemoveItem", data: { orderDetailsID: e } }).done(function (t) { if (console.log(t), t.isSuccess) { document.getElementById("cartItem" + e).remove(); var r = t.message[0].split("."); if (document.getElementById("cartTotalPriceN").innerHTML = r[0], document.getElementById("cartTotalPriceD").innerHTML = r[1], app.cartItemCount--, 0 == app.cartItemCount) document.getElementById("cartCheckoutBtn").classList.add("disabled"); document.getElementById("orderSummary") && app.updateOrderSummary() } }) }, updateItemQuantity: function (e, t) { t < 1 && (t = 1, document.getElementById("cartItemQuantity" + e).value = 1), $.ajax({ type: "POST", url: "/Order/UpdateItemQuantity", data: { orderDetailsID: e, quantity: t } }).done(function (t) { var r = t.message[0].split("."); document.getElementById("cartTotalPriceN").innerHTML = r[0], document.getElementById("cartTotalPriceD").innerHTML = r[1]; var a = t.message[1].split("."); if (document.getElementById("productTotalPriceN" + e).innerHTML = a[0], document.getElementById("productTotalPriceD" + e).innerHTML = a[1], document.getElementById("orderSummary") && t.isSuccess && app.updateOrderSummary(), !t.isSuccess) { var n = document.getElementById("cartItemError" + e); n.innerHTML = t.message[2], document.getElementById("cartItemQuantity" + e).value = t.message[3], setTimeout(() => { n.innerHTML = "" }, 3e3) } }) }, updateOrderSummary: function () { $.ajax({ type: "POST", url: "/Checkout/UpdateOrderSummary", data: {} }).done(function (e) { console.log(e), $("#orderSummary").html(e) }) } }, mounted: function () { this.getCurrentCartCount(), this.loadCart() } });