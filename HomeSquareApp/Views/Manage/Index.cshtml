@model HomeSquareApp.Models.ApplicationUser


@{
    ViewBag.NavbarExtension = true;
    ViewData["Title"] = "Account Information";
}

@section pageSpecificCss{
    <script src="https://kit.fontawesome.com/ea080c442b.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="~/lib/css/sidebar.css" />
    <link rel="stylesheet" href="~/lib/css/adminOrder.css" />
    <style>
        .form-control {
            border-radius: 0;
        }

            .form-control:focus {
                border-color: black;
                box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(126, 239, 104, 0.6);
                outline: 0 none;
            }

        @@media (min-width: 767.98px) {
            .input-w-auto {
                width: auto;
            }
        }

        .toast-body-alert {
            background-color: #F8C4B6;
        }

        .toast-body-success {
            background-color: #C5E1A5;
        }

        th {
            white-space: nowrap
        }

        .paginationLink.active {
            border-bottom: 3px solid #f564a9 !important;
        }

        .paginationLink:hover {
            background-color: #f8f9fa !important
        }
    </style>
}

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 5">
    <div id="manageLiveToast" class="toast hide toast-body-success" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3500" data-bs-autohide="true">
        <div class="toast-header">
            <strong class="me-auto">Notification</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div id="manageNotificationBody" class="toast-body">
        </div>
    </div>
</div>

<div class="d-flex" id="wrapper">

    <div class="d-flex flex-column justify-content-between bg-white border-right shadow pt-5" id="sidebar-wrapper">
        <div class="d-flex flex-column align-items-center gap-1" style="width: 20rem;">
            <div>
                <img id="sidebarPicture" style="object-fit:cover;object-position:center center;width:8rem;height:8rem;border-radius:50%"
                     src="~/lib/images/users/@Model.PictureUrl" onerror="this.src='/lib/images/users/blank-profile.png'" alt="@Model.FirstName Picture" asp-append-version="true" />
            </div>
            <div id="sidebarHandleName" class="fw-bold mt-2">
                @Model.FirstName @Model.LastName
            </div>
            <h6 id="sidebarEmail" style="word-wrap:break-word">
                @Model.Email
            </h6>
            <a id="accountSettingsLink" name="AccountSettings" href="#" onclick="changePage(this)"
               class="@(ViewData["pageName"] as string == "AccountSettings"? "active" : "") tabLink d-flex justify-content-center me-2 p-2 w-100">
                Profile
            </a>
            @if (User.IsInRole("CUSTOMER"))
            {
                <a id="pastOrderLink" href="#" name="PastOrders" onclick="changePage(this)"
                   class="@(ViewData["pageName"] as string == "PastOrders"? "active" : "") tabLink d-flex justify-content-center me-2 p-2 w-100">
                    Past Orders
                </a>
                <a id="myRecipesLink" href="#" name="MyRecipes" onclick="changePage(this)"
                   class="@(ViewData["pageName"] as string == "MyRecipes"? "active" : "") tabLink d-flex justify-content-center me-2 p-2 w-100">
                    My Recipes
                </a>
                <a id="myRewardsLink" href="#" name="MyRewards" onclick="changePage(this)"
                   class="@(ViewData["pageName"] as string == "MyRewards"? "active" : "") tabLink d-flex justify-content-center me-2 p-2 w-100">
                    My Rewards
                </a>
            }
            else if (User.IsInRole("ADMIN"))
            {
                <a asp-controller="Admin" asp-action="Index"
                   class="tabLink d-flex justify-content-center me-2 p-2 w-100">
                    Admin Panel
                </a>
            }
            <a asp-controller="Account" asp-action="Logout" class="d-flex justify-content-center me-2 p-2 w-100">
                Logout
            </a>
        </div>
        <a href="#" class="d-flex align-self-end justify-content-center me-1 p-2 w-100 fw-bold">Back to Top</a>
    </div>
    <div id="page-content-wrapper">
        @if (ViewData["pageName"] as string == "PastOrders")
        {
            <div>
                @await Component.InvokeAsync("PastOrders")
            </div>
        }
        else if (ViewData["pageName"] as string == "MyRecipes")
        {
            <div>
                @await Component.InvokeAsync("MyRecipes")
            </div>
        }
        else if (ViewData["pageName"] as string == "MyRewards")
        {
            <div>
                @await Component.InvokeAsync("MyRewards")
            </div>
        }
        else
        {
            <div>
                @await Component.InvokeAsync("AccountProfileSettings")
            </div>
        }
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header flex-column">
                <i class="far fa-times-circle fa-5x text-danger"></i>
                <h4 class="modal-title w-100">Are you sure?</h4>
                <button type="button" class="btn-close close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Do you really want to delete these records? </p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="deleteConfirmed()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="rewardsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content position-relative" id="modelRewardPartialContent">
            
        </div>
    </div>
</div>

@section Scripts{

    <!-- Menu Toggle Script -->
    <script>
        var tabLink = document.getElementsByClassName("tabLink")
        var currentPage = 0;
        var currentPageName = "";

        function changePage(el) {
            currentPage = 0;

            for (i = 0; i < tabLink.length; i++) {
                tabLink[i].classList.remove("active")
            }

            el.classList.add("active")
            currentPageName = el.name
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/ChangePage", // Controller/View
                    data: {
                        pageName: el.name,
                    },
                    success: function (data) {
                        $("#page-content-wrapper").html(data)
                    }
                })
        }

        function getOrderDetails(orderID) {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/OrderDetails", // Controller/View
                    data: {
                        orderID: orderID,
                    },
                    success: function (data) {
                        $("#myOrderContent").html(data)
                        document.getElementById("backOrderBtn").hidden = false;
                    }
                })
        }

        function getOrderDetailsFromRewards(orderID) {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/OrderDetails", // Controller/View
                    data: {
                        orderID: orderID,
                    },
                    success: function (data) {
                        $("#myRewardContent").html(data)
                        document.getElementById("backRewardsBtn").hidden = false;
                        document.getElementById("getRewardBtn").hidden = true;
                    }
                })
        }

        function loadOrderList() {
            var el = document.getElementById("pastOrderLink")
            document.getElementById("backOrderBtn").hidden = true;
            document.getElementById("page-content-wrapper").innerHTML = ""
            changePage(el)
        }

        $("#menu-toggle").click(function (e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });

        function disableEditProfileSubmit() {
            document.getElementById("editProfileSubmitBtn").setAttribute("disabled", "true");
        }
    </script>
    <script>

        function changePasswordNotification(data) {
            var changePasswordSummaryEl = document.getElementById("errorChangePasswordSummary");
            $("#manageLiveToast").removeClass("toast-body-alert")
            $("#manageLiveToast").removeClass("toast-body-success")
            if (data.isSuccess) {

                document.getElementById("manageNotificationBody").innerHTML = data.message[0]

                $("#manageLiveToast").toast('show').addClass("toast-body-success");
                changePasswordSummaryEl.innerHTML = "";
                document.getElementById("changePasswordForm").reset();

            } else {
                var list = document.createElement('ul');
                for (var i = 0; i < data.message.length; i++) {
                    // Create the list item:
                    var item = document.createElement('li');

                    // Set its contents:
                    item.appendChild(document.createTextNode(data.message[i]));

                    // Add it to the list:
                    list.appendChild(item);
                }
                list.style.listStyleType = "disc"
                //CLEAR PREVIOUS ERROR SUMMARY
                changePasswordSummaryEl.innerHTML = "";
                //REPOPULATE THE SUMMARY With list above
                changePasswordSummaryEl.appendChild(list);
            }
        }

        function editProfileNotification(data) {
            var errorEditProfileSummary = document.getElementById("errorEditProfileSummary");
            $("#manageLiveToast").removeClass("toast-body-alert")
            $("#manageLiveToast").removeClass("toast-body-success")
            if (data.isSuccess) {
                document.getElementById("manageNotificationBody").innerHTML = data.message[0]
                $("#manageLiveToast").addClass("toast-body-success")
                errorEditProfileSummary.innerHTML = "";
                updateUserInfo()

            } else {
                var list = document.createElement('ul');
                for (var i = 0; i < data.message.length; i++) {
                    // Create the list item:
                    var item = document.createElement('li');

                    // Set its contents:
                    item.appendChild(document.createTextNode(data.message[i]));

                    // Add it to the list:
                    list.appendChild(item);
                }
                list.style.listStyleType = "disc"
                //CLEAR PREVIOUS ERROR SUMMARY
                errorEditProfileSummary.innerHTML = "";
                //REPOPULATE THE SUMMARY With list above
                errorEditProfileSummary.appendChild(list);

                $("#manageLiveToast").addClass("toast-body-alert")
                document.getElementById("manageNotificationBody").innerHTML = "Failure to Update Profile. Please Fix The Error on The Form."
            }
            $("#manageLiveToast").toast('show');

            document.getElementById("editProfileSubmitBtn").removeAttribute("disabled")
        }

        function updateUserInfo() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/GetUserPictureUrlAndHandleName", // Controller/View
                    data: {
                    }
                }).done(function (data) {

                    var sidebarPicture = document.getElementById("sidebarPicture");
                    var sidebarHandleName = document.getElementById("sidebarHandleName");

                    sidebarHandleName.innerHTML = data[0];
                    sidebarPicture.src = data[1];
                });
        }

        function readURL(input) {
            var imageProfilePicturePreview = document.getElementById("imageProfilePicturePreview");
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    //console.log(e.target.result)
                    imageProfilePicturePreview.src = e.target.result;
                }

                const file = input.files[0];

                const fileType = file['type'];

                const validImageTypes = ['image/gif', 'image/jpeg', 'image/jpg', 'image/png'];
                if (validImageTypes.includes(fileType)) {
                    reader.readAsDataURL(file);
                }
            }
        }
    </script>
    
    <script>

        function goToPage(pageNumber) {
            //set style
            updatePaginationStyle(pageNumber)
            currentPage = pageNumber;

            if (currentPageName == "MyRecipes") {
                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "/Manage/RecipeNextTableData", // Controller/View
                        data: {
                            pageNumber: pageNumber
                        }
                    }).done(function (data) {
                        $("#tableData").html(data)
                    });
            }
            else if (currentPageName == "PastOrders") {
                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "/Manage/OrderNextTableData", // Controller/View
                        data: {
                            pageNumber: pageNumber
                        }
                    }).done(function (data) {
                        $("#tableData").html(data)
                    });
            }
            else if (currentPageName == "MyRewards") {
                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "/Manage/RewardsNextTableData", // Controller/View
                        data: {
                            pageNumber: pageNumber
                        }
                    }).done(function (data) {
                        $("#tableData").html(data)
                    });
            }
        }

        function updatePaginationStyle(pageNumber) {
            var paginationList = document.getElementsByClassName("paginationElement")

            var prevPageBtn = document.getElementById("prevPageBtn");
            if (prevPageBtn != null) {
                if (pageNumber != 0) {
                    prevPageBtn.hidden = false;
                } else {
                    prevPageBtn.hidden = true;
                }
            }

            var nextPageBtn = document.getElementById('nextPageBtn');
            if (nextPageBtn != null) {
                if (pageNumber == paginationList.length - 1) {
                    nextPageBtn.hidden = true;
                } else {
                    nextPageBtn.hidden = false;
                }
            }

            for (i = 0; i < paginationList.length; i++) {
                paginationList[i].classList.remove("active");
                if (i == pageNumber) {
                    paginationList[i].classList.add("active");
                }
                //hide button that are not in range of this
                if (i >= pageNumber - 1 && i < pageNumber + 3) {
                    paginationList[i].hidden = false

                } else {
                    paginationList[i].hidden = true
                }
            }
        }
    </script>
    <script>
        //Delete Confirmation Order
        var recipeID;
        function openDeleteConfirmationModal(recipeID) {
            this.recipeID = recipeID
        }

        function deleteConfirmed() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/DeleteRecipeConfirmed", // Controller/View
                    data: {
                        recipeID: this.recipeID,
                        currentPage: this.currentPage,
                    },
                }).done(function (data) {
                    $("#myRecipeContent").html(data)
                    var myModalEl = document.getElementById('deleteConfirmationModal')
                    var modal = bootstrap.Modal.getInstance(myModalEl) // Returns a Bootstrap modal instance
                    modal.hide();
                });
        }
    </script>
    <script>
        function getReward(rewardIndex) {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Reward/GetReward", // Controller/View
                    data: {
                        rewardIndex: rewardIndex,
                    },
                }).done(function (data) {
                    document.getElementById("rewardContent").innerHTML = "";
                    $("#rewardContent").html(data)
                    loadRewardsData()
                });
        }

        function loadRewardsData() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/GetAllUserRewards", // Controller/View
                    data: {
                    },
                }).done(function (data) {
                    $("#page-content-wrapper").html(data)
                });
        }

        function renderModelRewardPartial() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Manage/RenderModalRewardPartial", // Controller/View
                    data: {
                    },
                }).done(function (data) {
                    document.getElementById("modelRewardPartialContent").innerHTML = "";
                    $("#modelRewardPartialContent").html(data)
                });
        }

        function getChoosePrizePartial() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Reward/GetChoosePrizePartial", // Controller/View
                    data: {
                    },
                }).done(function (data) {
                    document.getElementById("rewardStartSection").style.display = "none";
                    
                    $("#rewardContent").html(data)
                    
                });
        }
    </script>
}