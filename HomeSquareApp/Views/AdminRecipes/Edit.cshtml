@model HomeSquareApp.ViewModels.AdminRecipeEditViewModel

@{
    ViewData["Title"] = "Edit Recipe";
    Layout = "_AdminLayout";
    ViewData["NavData"] = "Recipe";
    ViewData["CurrentPage"] = "Main";
}

@section pageSpecificCss{
    
    <environment include="Development">
        @* Custom Page Specific Css *@
        <link rel="stylesheet" href="~/lib/css/recipeDetails.css" />
    </environment>
    <environment exclude="Development">
        @* Custom Page Specific Css  *@
        <link rel="stylesheet" href="~/lib/css/recipeDetails.min.css" />
    </environment>
}
<div id="app">
    <form asp-controller="AdminRecipes" asp-action="Edit" method="post" enctype="multipart/form-data" autocomplete="off">
        <div class="d-flex gap-3">
            <h2>Edit Recipe</h2>
            <select asp-for="RecipeStatus" class="form-control w-25" asp-items="ViewBag.RecipeStatus">
            </select>
            <input type="submit" value="Save Changes" class="rounded-0 btn btn-outline-success border-secondary me-4" />
        </div>
        <hr />


        <input type="hidden" asp-for="RecipeID" />
        <input type="hidden" asp-for="ExistingImageUrl" />

        <partial name="_RecipeFormTemplatePartial" model="Model" />

        <div class="border-top py-2">
            <div class="d-flex align-items-center">
                <a asp-action="Index" class="me-auto text-decoration-none">
                    Back to Products List
                </a>
                <input type="submit" value="Edit Recipe" class="rounded-0 btn btn-success border-secondary me-4" />
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <script src="~/lib/vue/vue.js"></script>
    <script>
        var app = new Vue({
            el: '#app',
            data: {
            },
            methods: {
                triggerSearchQuery: function (el) {
                    if (el.value.length < 2) {
                        return;
                    }

                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "/Home/GetQuery", // Controller/View
                            data: {
                                searchString: el.value,
                                searchCategories: "Products",
                            }
                        }).done(function (data) {

                            var a, b, i, val = el.value;
                            /*close any already open lists of autocompleted values*/
                            app.closeAllLists();

                            a = document.createElement("DIV");
                            a.setAttribute("id", this.id + "autocomplete-list");
                            a.setAttribute("class", "autocomplete-items");

                            el.parentNode.appendChild(a);

                            for (i = 0; i < data.length; i++) {
                                b = document.createElement("DIV");
                                b.innerHTML = data[i]
                                b.innerHTML += "<input type='hidden' value='" + data[i] + "'>";
                                b.addEventListener("click", function (e) {
                                    /*insert the value for the autocomplete text field:*/
                                    el.value = this.getElementsByTagName("input")[0].value;
                                    //app.searchString = el.value;
                                    /*close the list of autocompleted values,
                                    (or any other open lists of autocompleted values:*/
                                    app.closeAllLists();
                                });
                                a.appendChild(b);
                            }
                        });
                },
                closeAllLists: function (elmnt) {
                    /*close all autocomplete lists in the document,
                    except the one passed as an argument:*/
                    var x = document.getElementsByClassName("autocomplete-items");
                    for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i]) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                    }
                },
            },
        })
    </script>
    <script>
        var nextIngredientId = @Model.Ingredients.Count();
        var nextInstructionId =  @Model.RecipeSteps.Count();

        var recipeImage = document.getElementById("recipeImage")
        recipeImage.style.backgroundImage = "url('@Model.ExistingImagePath')";;
        /*recipeImage.style.backgroundImage = "url('/lib/images/products/productPlaceholder.png')";*/



        $(function() {
            $("#RecipeStatus option[value='@Model.RecipeStatus']").attr('selected', 'true');
        });
    </script>

    <script src="~/lib/js/RecipeDynamicListStepsIngredient.js">
    </script>
}