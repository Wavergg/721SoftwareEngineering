@model HomeSquareApp.ViewModels.RecipeCreateViewModel

@{
    ViewData["Title"] = "Create Recipe";
    Layout = "_AdminLayout";
    ViewData["NavData"] = "Recipe";
    ViewData["CurrentPage"] = "Main";
}

@section pageSpecificCss{
    <link rel="stylesheet" href="~/lib/css/recipeDetails.css" />
    <style>
        .form-control {
            border-radius: 0;
            background: #FDFDFD;
        }

            .form-control:focus {
                border-color: black;
                box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(126, 239, 104, 0.6);
                outline: 0 none;
            }


        .recipe-title {
            font-family: Bahnschrift;
        }

        label {
            font-size: 14px;
            color: #808080;
        }

        select {
            font-size: 14px !important;
            color: #808080 !important;
        }

            select option {
                font-size: 14px;
                color: #808080;
            }

        /*Autocomplete*/

        .autocomplete-items {
            position: absolute;
            border: 1px solid #d4d4d4;
            border-bottom: none;
            border-top: none;
            z-index: 99;
            /*position the autocomplete items to be the same width as the container:*/
            top: 100%;
            left: 0;
            right: 0;
        }

            .autocomplete-items div {
                padding: 10px;
                cursor: pointer;
                background-color: #fff;
                border-bottom: 1px solid #d4d4d4;
            }

                .autocomplete-items div:hover {
                    /*when hovering an item:*/
                    background-color: #e9e9e9;
                }

        .autocomplete-active {
            /*when navigating through the items using the arrow keys:*/
            background-color: DodgerBlue !important;
            color: #ffffff;
        }

    </style>
}

<h2>Create New Recipe</h2>
<hr />
<div id="app">
    <form asp-controller="AdminRecipes" asp-action="Create" method="post" enctype="multipart/form-data" autocomplete="off">
        
        <partial name="_RecipeFormTemplatePartial" model="Model"/>

       
        <div class="border-top py-2">
            <div class="d-flex align-items-center">
                <a asp-action="Index" class="me-auto text-decoration-none">
                    Back to Products List
                </a>
                <input type="submit" value="Create Recipe" class="rounded-0 btn btn-success border-secondary me-4" />
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <script src="~/lib/js/vue.js"></script>
    <script>
        var app = new Vue({
            el: '#app',
            data: {
                searchCategories: "Products",

                productOrderSubmitBtn: null,
                cartItemCount: 0,
            },
            methods: {
                updateSearchCategories: function (event) {
                    this.searchCategories = event.target.value;
                },
                triggerSearchQuery: function (el) {
                    if (el.value.length < 2 || this.searchCategories == "") {
                        return;
                    }

                    $.ajax(
                        {
                            type: "POST", //HTTP POST Method
                            url: "/Home/GetQuery", // Controller/View
                            data: {
                                searchString: el.value,
                                searchCategories: app.searchCategories,
                            }
                        }).done(function (data) {

                            var a, b, i, val = el.value;
                            /*close any already open lists of autocompleted values*/
                            app.closeAllLists();

                            a = document.createElement("DIV");
                            a.setAttribute("id", this.id + "autocomplete-list");
                            a.setAttribute("class", "autocomplete-items");

                            el.parentNode.appendChild(a);

                            for (i = 0; i < data.length; i++) {
                                b = document.createElement("DIV");
                                b.innerHTML = data[i]
                                b.innerHTML += "<input type='hidden' value='" + data[i] + "'>";
                                b.addEventListener("click", function (e) {
                                    /*insert the value for the autocomplete text field:*/
                                    el.value = this.getElementsByTagName("input")[0].value;
                                    //app.searchString = el.value;
                                    /*close the list of autocompleted values,
                                    (or any other open lists of autocompleted values:*/
                                    app.closeAllLists();
                                });
                                a.appendChild(b);
                            }
                        });
                },
                closeAllLists: function (elmnt) {
                    /*close all autocomplete lists in the document,
                    except the one passed as an argument:*/
                    var x = document.getElementsByClassName("autocomplete-items");
                    for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i]) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                    }
                },
            },
        })
    </script>
    <script>
        function textAreaAdjust(element) {
            element.style.height = "1px";
            element.style.height = (25 + element.scrollHeight) + "px";
        }

        var recipeImage = document.getElementById("recipeImage")

        /*recipeImage.style.backgroundImage = "url('/lib/images/products/productPlaceholder.png')";*/

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    //console.log(e.target.result)
                    recipeImage.style.backgroundImage = "url('" + e.target.result+"')";;
                }

                const file = input.files[0];

                const fileType = file['type'];

                const validImageTypes = ['image/gif', 'image/jpeg', 'image/jpg','image/png'];
                if (validImageTypes.includes(fileType)) {
                    reader.readAsDataURL(file);
                }
            }
        }

        var nextIngredientId = @Model.Ingredients.Count();

        $("#addIngredient").click(function () {
            var rowHtml = `<div class="d-flex my-3" id="IngredientContent`+nextIngredientId+`">

                            <div class="form-floating col-4">
                                <input name="Ingredients[`+nextIngredientId+`].ServingContent" type="text" class="form-control" placeholder="0">
                                <label>Amount</label>
                            </div>
                            <div class="form-floating flex-fill">
                                <input  name="Ingredients[`+nextIngredientId+`].IngredientName" type="text" class="form-control" onkeyup="app.triggerSearchQuery(this)">
                                <label>Ingredient Name</label>
                            </div>
                            <button type="button" onclick="removeIngredient('IngredientContent'+`+ nextIngredientId +`)" class="text-danger fw-bold btn btn-default">X</button>
                        </div>`
            nextIngredientId++;

            $("#ingredientRow").append(rowHtml);
        });

        function removeIngredient(elementID) {
            var el = document.getElementById(elementID)
            el.remove();
            nextIngredientId--;
        }


        var nextInstructionId =  @Model.RecipeSteps.Count();
        $("#addInstruction").click(function () {

            var rowHtml = `<div class="card shadow-sm pt-5 pb-4 px-4 my-2" id="StepsContent`+nextInstructionId+`">
                            <div class="position-absolute start-0 top-0 mx-4 mt-3">
                                <small class="fw-bold">Step `+(nextInstructionId+1)+`</small>
                                <a style="cursor:pointer" onclick="removeSteps('StepsContent`+ nextInstructionId +`')" class="text-decoration-none text-danger fw-bold">X</a>
                            </div>
                            <div>
                                <div class="form-floating">
                                    <textarea id="RecipeSteps_`+nextInstructionId+`__Steps" name="RecipeSteps[`+nextInstructionId+`].Steps" class="form-control" onkeyup="textAreaAdjust(this)" style="height: 100px" placeholder="Describe Instruction"></textarea>
                                    <label for="RecipeSteps_`+nextInstructionId+`__Steps">Instruction</label>
                                </div>
                            </div>
                        </div>`

            nextInstructionId++;

            $("#stepsRow").append(rowHtml);
        });

        function removeSteps(elementID) {
            var el = document.getElementById(elementID)
            el.remove();
            nextInstructionId--;
        }

        $("#Image").change(function () {
            readURL(this);
        });

        $(document).on("keydown", ":input:not(textarea)", function (event) {
            return event.key != "Enter";
        });
    </script>

}