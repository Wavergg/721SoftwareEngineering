@inject SignInManager<ApplicationUser> signInManager
@model HomeSquareApp.ViewModels.ProductDetailsViewModel

@{
    ViewData["Title"] = Model.Product.ProductName;
    string priceAfterDiscount = string.Format("{0:F2}", Model.Product.PriceAfterDiscount);
    string[] priceBase = priceAfterDiscount.Split('.');

    int dayOfWeek = ((int)DateTime.Now.DayOfWeek) == 0 ? 7 : (int)DateTime.Now.DayOfWeek;
    var previous1WeekSunday = @DateTime.Now.AddDays(-(dayOfWeek));
    var previous2WeekSunday = previous1WeekSunday.AddDays(-7);
    var previous3WeekSunday = previous2WeekSunday.AddDays(-7);
    var previous4WeekSunday = previous3WeekSunday.AddDays(-7);
    var previous5WeekSunday = previous4WeekSunday.AddDays(-7);

    
}

@section pageSpecificCss{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/lib/Chart.js/Chart.min.css" />
    @*<link rel="stylesheet" href="~/lib/css/magnifier.css" />*@
    <link rel="stylesheet" href="~/lib/css/magnifier.min.css" />
    <environment include="Development">
        @* Custom Page Specific Css *@
        <link rel="stylesheet" href="~/lib/css/productDetails.css" />

    </environment>
    <environment exclude="Development">
        @* Custom Page Specific Css  *@
        <link rel="stylesheet" href="~/lib/css/productDetails.min.css" />
    </environment>
}

<div class="py-5">
    <div class="d-flex align-items-center justify-content-center mb-3 pt-4">
        <div class="container flex-md-row d-md-flex justify-content-center">
            @* Product Card Image section *@
            <section class="magnifier-thumb-wrapper card bg-white border-0" style="height:auto">
                <img id="thumb" class="mx-3" src="~/lib/images/products/@Model.Product.ImageUrl" alt="@Model.Product.ProductName" style="object-fit:fill;background-repeat: no-repeat;" asp-append-version="true" />
                @if (Model.Product.ProductStatus.ProductStatusName == "Sale" && Model.Product.SaleEndDateTime >= DateTime.Now)
                {
                    <div class="alert alert-success p-0 px-2 rounded-0" style="position: absolute; left: -1px; top: 0px;">
                        <small class="alert-link">@(Model.Product.ProductDiscount*100) % OFF</small>
                    </div>
                }
            </section>

            @* Product Information Section *@
            <section class="ps-md-5 w-md-50 pt-3 p-md-0">
                <h1>@Model.Product.ProductName</h1>
                <p>@Model.Product.Description</p>
                <div class="d-flex align-items-center mb-3">
                    <div>
                        @* Do price after discount, Split price and store it in different variable and do a razor field for whole number and decimal *@
                        <span class="product-price">$</span><span class="product-price">@priceBase[0]</span><sup class="product-price-decimal">@priceBase[1]</sup>
                        @* Price before discount *@
                        @if (Model.Product.ProductStatus.ProductStatusName == "Sale" && Model.Product.SaleEndDateTime >= DateTime.Now)
                        {
                            <p>Was <span class="product-price-before-special">$@string.Format("{0:F2}", Model.Product.ProductPrice)</span></p>
                        }
                    </div>
                    <div class="ms-auto">
                        @* Price per unit *@
                        <span class="fw-normal">@Model.Product.ProductServingContent @Model.Product.ServingType.ServingType</span>
                    </div>
                </div>
                <form class="position-relative" asp-controller="Order" asp-action="HandleOrder" method="post"
                      data-ajax="true" data-ajax-method="post" data-ajax-begin="app.disableSubmit" data-ajax-complete="app.detailsOrderAdded" data-ajax-url="/Order/HandleOrder">

                    <div class="d-flex gap-lg-0 gap-md-2 pb-5">
                        <input name="productID" type="hidden" value="@Model.Product.ProductID" />
                        <input name="quantity" type="number" @(Model.Product.ProductStock > 0 ? "" : "disabled") placeholder="1" min="1" value="1" class="rounded-0 rounded-start form-control w-25" />
                        <button type="submit" onclick="app.orderFormSubmitBtn(this)" @(Model.Product.ProductStock > 0 ? "" : "disabled") class="btn btn-success rounded-0 rounded-end">Add To Cart</button>
                        <a asp-controller="Checkout" asp-action="Index" :class="(cartItemCount <1 ?'disabled':'') +' ms-auto btn btn-light border-secondary text-dark'">Check Out</a>
                    </div>
                    <small></small>
                </form>
            </section>
        </div>
    </div>

    <div class="mt-5">
        <ul class="nav nav-tabs justify-content-center" id="productTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link " id="productInfo-tab" data-bs-toggle="tab" data-bs-target="#productInfo" type="button" role="tab" aria-controls="productInfo" aria-selected="false">Product Information</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="statiscic-tab" data-bs-toggle="tab" data-bs-target="#statiscic" type="button" role="tab" aria-controls="statiscic" aria-selected="false">Statistic</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="rating-tab" data-bs-toggle="tab" data-bs-target="#rating" type="button" role="tab" aria-controls="rating" aria-selected="true">Rating</button>
            </li>
        </ul>
        <div class="tab-content bg-transparent border-bottom" id="productTabContent" style="min-height:450px;">
            <div class="tab-pane fade" id="productInfo" role="tabpanel" aria-labelledby="productInfo-tab">
                <div class="container py-5">
                    <div class="row">
                        @if (Model.Product.ProductInformation == null)
                        {
                            <p class="fst-italic">
                                Currently There Are No Information Regarding to The Product
                            </p>
                        }
                        else
                        {
                            @*<dl>
                                    <dt class="col-sm-3">Description lists</dt>
                                    <dd class="col-sm-9">A description list is perfect for defining terms.</dd>

                                    <dt class="col-sm-3">Term</dt>
                                    <dd class="col-sm-9">
                                        <p>Definition for the term.</p>
                                        <p>And some more placeholder definition text.</p>
                                    </dd>

                                    <dt class="col-sm-3">Another term</dt>
                                    <dd class="col-sm-9">This definition is short, so no extra paragraphs or anything.</dd>

                                    <dt class="col-sm-3 text-truncate">Truncated term is truncated</dt>
                                    <dd class="col-sm-9">This can be useful when space is tight. Adds an ellipsis at the end.</dd>

                                    <dt class="col-sm-3">Nesting</dt>
                                    <dd class="col-sm-9">
                                        <dl class="row">
                                            <dt class="col-sm-4">Nested definition list</dt>
                                            <dd class="col-sm-8">I heard you like definition lists. Let me put a definition list inside your definition list.</dd>
                                        </dl>
                                    </dd>
                                </dl>*@
                            <dl>
                                <dt class="col-sm-3"></dt>
                                <dd class="col-sm-9">@Model.Product.ProductInformation</dd>
                            </dl>
                        }
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="statiscic" role="tabpanel" aria-labelledby="statiscic-tab">
                <div class="container py-5">
                    <div class="row justify-content-center">
                        <div class="col-md-6 position-relative">
                            <div class="position-absolute bg-white shadow-lg w-100 h-100 start-0 end-0 text-center rounded-3" style="z-index:-1;transform:scale(1.1,1.1);">
                            </div>
                            <canvas width="360" height="240" id="myChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade show active" id="rating" role="tabpanel" aria-labelledby="rating-tab">
                <partial name="_UserRatingSummaryPartial" model="Model.Product" />
            </div>
        </div>
    </div>

    <div class="container pt-5">
        <h2>Reviews</h2>
        @* NYD Use user role here *@
        @if (!signInManager.IsSignedIn(User))
        {
            <div>
                <a href="#" data-bs-toggle="modal" data-bs-target="#loginModal" class="text-primary fw-bold">Log in</a> to post review
            </div>
        }
        else
        {
            @if (Model.CurrentUserReview == null)
            {
                <div class="d-md-flex" id="reviewFormSection">
                    <div class="px-md-5 px-4 py-md-4 pt-2 align-items-center d-flex">
                        @if (Model.User.PictureUrl != null)
                        {
                            <img src="~/lib/images/users/@Model.User.PictureUrl" class="rounded-circle" style="height:50px;width:50px" />
                        }
                        else
                        {
                            <img src="~/lib/images/users/blank-profile.png" class="rounded-circle" style="height:50px;width:50px" />
                        }
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <form asp-controller="Review" asp-action="CreateReview" method="post" data-ajax="true"
                              data-ajax-complete="refreshReview" data-ajax-method="post" data-ajax-url="/Review/CreateReview"
                              >
                            <input asp-for="Review.UserID" value="@Model.User.Id" hidden />
                            <input asp-for="Review.ProductID" value="@Model.Product.ProductID" hidden />
                            <div class="stars">
                                <input class="star star-5" id="star-5" type="radio" value="5" asp-for="Review.ReviewStars" />
                                <label class="star star-5" for="star-5"></label>
                                <input class="star star-4" id="star-4" type="radio" value="4" asp-for="Review.ReviewStars" />
                                <label class="star star-4" for="star-4"></label>
                                <input class="star star-3" id="star-3" type="radio" value="3" asp-for="Review.ReviewStars" />
                                <label class="star star-3" for="star-3"></label>
                                <input class="star star-2" id="star-2" type="radio" value="2" asp-for="Review.ReviewStars" />
                                <label class="star star-2" for="star-2"></label>
                                <input class="star star-1" id="star-1" type="radio" value="1" asp-for="Review.ReviewStars" />
                                <label class="star star-1" for="star-1"></label>
                            </div>
                            <div class="form-floating">
                                <textarea asp-for="Review.ReviewContent" onkeyup="textAreaAdjust(this)" class="form-control" placeholder="Leave a comment here" style="height: 100px"></textarea>
                                <label asp-for="Review.ReviewContent" class="text-muted">Enter Your Review</label>
                            </div>
                            <div id="reviewValidation" class="text-danger my-2"></div>
                            <button type="submit" id="submitReviewFormBtn" class="btn btn-outline-success rounded-0 mt-2">Submit Review</button>
                        </form>

                    </div>
                </div>
            }
            else
            {
                <partial name="_ReviewCardPartial" model="Model.CurrentUserReview" />
            }
        }
        <div class="text-muted">
            <hr class="" />
        </div>
        <div id="reviewsSection">
            <partial name="_ReviewsListPartial" model="Model.Product.Review" />
        </div>
    </div>

</div>

@section Scripts {
    @* Script for line chart *@

    <environment include="Development">
        @* Custom Page Specific JS *@
        <script src="~/lib/Chart.js/Chart.js"></script>
        @* Script For magnifier on product,
            commented the zommable: true*@
        <script src="~/lib/js/event.js"></script>
        <script src="~/lib/js/magnifier.js"></script>
    </environment>
    <environment exclude="Development">
        @* Custom Page Specific JS  *@
        <script src="~/lib/js/event.min.js"></script>
        @* Script For magnifier on product,
            commented the zommable: true*@
        <script src="~/lib/Chart.js/Chart.min.js"></script>
        <script src="~/lib/js/magnifier.min.js"></script>
    </environment>
    <script>
        var config = {
            type: 'line',
            data: {
                labels: [
                    '@previous5WeekSunday.ToString("dd MMM")',
                    '@previous4WeekSunday.ToString("dd MMM")',
                    '@previous3WeekSunday.ToString("dd MMM")',
                    '@previous2WeekSunday.ToString("dd MMM")',
                    '@previous1WeekSunday.ToString("dd MMM")',
                    '@DateTime.Now.ToString("dd MMM")'],
                datasets:
                    [{
                        lineTension: 0.1,
                        label: 'Amount of purchase',
                        fill: true,
                        backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                            //'rgba(193, 66, 146, 0.5)',
                        ],
                        borderColor: [
                            'rgba(255,0,0,0.6)',
                            //'rgba(126, 239, 104, 0.6)',
                            //'rgba(25, 115, 84, 0.4)',
                        ],
                        data: [
                            @Model.Product.Week5PurchaseCount,
                            @Model.Product.Week4PurchaseCount,
                            @Model.Product.Week3PurchaseCount,
                            @Model.Product.Week2PurchaseCount,
                            @Model.Product.Week1PurchaseCount,
                            @Model.Product.CurrentWeekPurchaseCount,
                        ],
                    }],
            },
            options: {
                responsive: true,
                //title: {
                //    display: true,
                //    text: 'Items bought per week'
                //},
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'End of the week'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Quantity'
                        }
                    }]
                }
            }
        };

        window.onload = function () {
            var ctx = document.getElementById('myChart').getContext('2d');
            window.myLine = new Chart(ctx, config);
        };
    </script>
    <script>
        var evt = new Event(),
            m = new Magnifier(evt);
        m.attach({
            thumb: '#thumb',
            mode: 'inside',
            zoom: 2,
            /*zoomable: true*/
            onthumbenter: function () {
            },
            onthumbmove: function () {
            },
            onthumbleave: function () {
            },
        });
    </script>
    <script>
        var submitReviewFormBtn = document.getElementById("submitReviewFormBtn")

        function textAreaAdjust(element) {
            element.style.height = "1px";
            element.style.height = (25 + element.scrollHeight) + "px";

            if (element.value.length > 1024) {
                document.getElementById("reviewValidation").innerHTML = "Review Should Not Be Longer Than 1024 Characters"
                submitReviewFormBtn.disabled = true
            } else {
                document.getElementById("reviewValidation").innerHTML = "";
                submitReviewFormBtn.disabled = false
            }
        }

        function refreshReview(data) {
            //CLEAR PREVIOUS ERROR SUMMARY
            document.getElementById("reviewValidation").innerHTML = "";

            if (data.responseJSON.isSuccess) {
                var productID = document.getElementById("Review_ProductID");
                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "/Review/RefreshReview", // Controller/View
                        data: {
                            productID: productID.value,
                        }
                    }).done(function (data) {
                        $("#reviewsSection").html(data)
                    });

                $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "/Review/RefreshRating", // Controller/View
                        data: {
                            productID: productID.value,
                        }
                    }).done(function (data) {
                        $("#rating").html(data)
                    });

                document.getElementById("reviewFormSection").innerHTML = "";

            } else {
                //Create UL ELEMENT AND POPULATE IT BASED ON ERROR RETURNED
                var list = document.createElement('div');
                for (var i = 0; i < data.responseJSON.message.length; i++) {
                    // Create the list item:
                    var item = document.createElement('span');

                    // Set its contents:
                    item.appendChild(document.createTextNode(data.responseJSON.message[i]));

                    // Add it to the list:
                    list.appendChild(item);
                }
                
                //REPOPULATE THE SUMMARY With list above
                document.getElementById("reviewValidation").appendChild(list);
            }
        }
    </script>
}