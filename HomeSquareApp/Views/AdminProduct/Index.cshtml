@model IEnumerable<HomeSquareApp.Models.Product>

@{
    ViewData["Title"] = "Products Index";
    Layout = "_AdminLayout";
    ViewData["NavData"] = "Product";
    
}

@section pageSpecificCss{
    <style>
    </style>
}

<p>
    <a asp-action="Create">Add New Product</a>
</p>

<div>
    <div class="table-responsive" style="min-height:500px">
        <table class="table" >
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductPrice)
                    </th>
                    <th onclick="sortData('stock')">
                        <a class="d-flex align-items-end tableSortLink">
                            <i class="fas fa-sort d-flex align-items-start me-1" style="width:16px;height:20px"></i>
                            @Html.DisplayNameFor(model => model.ProductStock)
                        </a>
                    </th>
                    <th onclick="sortData('name')">
                        <a class="d-flex align-items-end tableSortLink">
                            <i class="fas fa-sort d-flex align-items-start me-1" style="width:16px;height:20px"></i>
                            @Html.DisplayNameFor(model => model.ProductName)
                        </a>
                    </th>
                    <th onclick="sortData('discount')">
                        <a class="d-flex align-items-end tableSortLink">
                            <i class="fas fa-sort d-flex align-items-start me-1" style="width:16px;height:20px"></i>
                            @Html.DisplayNameFor(model => model.ProductDiscount)
                        </a>
                    </th>
                    <th onclick="sortData('purchaseCount')">
                        <a class="d-flex align-items-end tableSortLink">
                            <i class="fas fa-sort d-flex align-items-start me-1" style="width:16px;height:20px"></i>
                            @Html.DisplayNameFor(model => model.CurrentWeekPurchaseCount)
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductStatus)
                    </th>
                    <th>
                        @*Actions*@
                    </th>
                </tr>
            </thead>
            <tbody id="tableData">
                <partial name="_AdminProductTableDataPartial" model="Model" />
            </tbody>
        </table>
    </div>
    <div class="d-flex">
        @if (ViewData["PaginationCount"] != null)
        {
            var counter = 0;
            <button id="prevPageBtn" style="width:34.97px" onclick="goToPage(currentPage - 1)" class="btn btn-default paginationLink rounded-0" hidden>
                <i class="fas fa-chevron-left" style="font-size:12px;color:#212529"></i>
            </button>
            @for (int i = 0; i < (int)ViewData["PaginationCount"]; i++)
            {
                var activeClass = i == 0 ? "active" : "";
                var hiddenAttr = (i >= -1 && i < 3) ? "" : "hidden";

                <button onclick="goToPage(@i)" class="btn btn-default paginationElement paginationLink rounded-0 @activeClass" @hiddenAttr>
                    @(1+i)
                </button>
                counter++;
            }
            <button id="nextPageBtn" style="width:34.97px;" onclick="goToPage(currentPage +1)" class="btn btn-default paginationLink rounded-0">
                <i class="fas fa-chevron-right" style="font-size:12px;color:#212529"></i>
            </button>
        }
    </div>
</div>
@section Scripts{
    //
    <script>
        var paginationList = document.getElementsByClassName("paginationElement")
        var currentPage = 0;
        function goToPage(pageNumber) {
            //set style
            updatePaginationStyle(pageNumber)
            currentPage = pageNumber;
            
            
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "AdminProduct/ProductNextTableData", // Controller/View
                    data: {
                        pageNumber: pageNumber
                    }
                }).done(function (data) {
                    $("#tableData").html(data)
                });
        }

        function updatePaginationStyle(pageNumber) {

            if (pageNumber != 0) {
                document.getElementById("prevPageBtn").hidden = false;
            } else {
                document.getElementById("prevPageBtn").hidden = true;
            }

            if (pageNumber == paginationList.length - 1) {
                document.getElementById('nextPageBtn').hidden = true;
            } else {
                document.getElementById('nextPageBtn').hidden = false;
            }

            for (i = 0; i < paginationList.length; i++) {
                paginationList[i].classList.remove("active");
                if (i == pageNumber) {
                    paginationList[i].classList.add("active");
                }
                //hide button that are not in range of this
                if (i >= pageNumber - 1 && i < pageNumber + 3) {
                    paginationList[i].hidden = false

                } else {
                    paginationList[i].hidden = true
                }
            }
        }

    @* Sorting Function *@
        var discountToggle = true;
        var nameToggle = true;
        var purchaseCountToggle = true;
        var stockToggle = false;

        function sortData(sortOrder) {
            if (sortOrder == "discount") {
                sortOrder += discountToggle ? "_desc" : "_asc"
                discountToggle = !discountToggle
            } else if (sortOrder == "name") {
                sortOrder += nameToggle ? "_desc" : "_asc"
                nameToggle = !nameToggle
            } else if (sortOrder == "purchaseCount") {
                sortOrder += purchaseCountToggle ? "_desc" : "_asc"
                purchaseCountToggle = !purchaseCountToggle
            } else if (sortOrder == "stock") {
                sortOrder += stockToggle ? "_desc" : "_asc"
                stockToggle = !stockToggle
            }
            //reset to first page
            updatePaginationStyle(0)
            currentPage = 0;
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "AdminProduct/ProductSortTableData", // Controller/View
                    data: {
                        sortOrder: sortOrder
                    }
                }).done(function (data) {
                    $("#tableData").html(data)
                });
        }
    </script>
}