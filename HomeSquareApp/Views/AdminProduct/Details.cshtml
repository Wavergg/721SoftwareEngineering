@model HomeSquareApp.Models.Product

@{
    ViewData["Title"] = "Details " + Model.ProductName;
    ViewData["NavData"] = "Product";
    Layout = "_AdminLayout";
    int dayOfWeek = ((int)DateTime.Now.DayOfWeek) == 0 ? 7 : (int)DateTime.Now.DayOfWeek;
    var previous1WeekSunday = @DateTime.Now.AddDays(-(dayOfWeek));
    var previous2WeekSunday = previous1WeekSunday.AddDays(-7);
    var previous3WeekSunday = previous2WeekSunday.AddDays(-7);
    var previous4WeekSunday = previous3WeekSunday.AddDays(-7);
    var previous5WeekSunday = previous4WeekSunday.AddDays(-7);

    double TOTAL_REVIEW_COUNT = Model.ReviewFiveStarsCount + Model.ReviewFourStarsCount + Model.ReviewThreeStarsCount + Model.ReviewTwoStarsCount + Model.ReviewOneStarsCount;
    double AVERAGE_REVIEW_SCORE = (Model.ReviewFiveStarsCount * 5 + Model.ReviewFourStarsCount * 4 + Model.ReviewThreeStarsCount * 3 + Model.ReviewTwoStarsCount * 2 + Model.ReviewOneStarsCount) / TOTAL_REVIEW_COUNT;
    double SCORE_ROUNDED = Math.Round(AVERAGE_REVIEW_SCORE) - 1;
}

<div class="d-md-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center"  >
        <h2>Product Details </h2>
        <a href="#myChart"><i class="fas fa-chart-line"></i></a>
    </div>
    <div>
        @for (int i = 0; i < 5; i++) {
            string className = "fa fa-star ";
            if (i <= SCORE_ROUNDED)
            {
                className += "checked";
            }
            <span class="@className"></span>
        }
        <p class="mb-0">@string.Format($"{ AVERAGE_REVIEW_SCORE:F2}") average based on @TOTAL_REVIEW_COUNT reviews.</p>
    </div>
</div>
<div>
    <hr />
    <div class="container d-md-flex justify-content-between p-3">
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ProductName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ProductName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProductPrice)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProductPrice)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProductStock)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProductStock)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProductDiscount)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProductDiscount)
                </dd>
            </dl>
        </div>
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ProductServingContent)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProductServingContent)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ServingType)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ServingType.ServingType)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProductStatus)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProductStatus.ProductStatusName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Category)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Category.CategoryName)
                </dd>
            </dl>
        </div>
        <div class="col-md-4">
            <div class="p-3 col-md-7">
                <img id="imagePhotoPreview" src="~/lib/images/products/@Model.ImageUrl" class="img-fluid" style="object-fit: cover;" asp-append-version="true">
            </div>
        </div>
    </div>
    <div class="row mt-3">
        @if (Model.ProductInformation != null && Model.ProductInformation != string.Empty)
        {
            <dl class="col-md">
                <dt>
                    @Html.DisplayNameFor(model => model.ProductInformation)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProductInformation)
                </dd>
            </dl>
        }
        @if (Model.Description != null && Model.Description != string.Empty)
        {
            <dl class="col-md">
                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
            </dl>
        }
    </div>
</div>
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-9 position-relative ">
            <div class="position-absolute shadow-sm w-100 h-100 start-0 end-0 text-center rounded-3" style="z-index:-1;transform:scale(1.1,1.1);">
            </div>
            <canvas width="360" height="240" id="myChart"></canvas>
        </div>
    </div>
</div>
<div class="border-top py-2 position-sticky bottom-0 bg-white">
    <div class="d-flex align-items-center">
        <a asp-action="Index" class="me-auto text-decoration-none">
            Back to Products List
        </a>
        <a asp-action="Edit" asp-route-id="@Model.ProductID" class="rounded-0 btn btn-outline-dark border-secondary">
            Edit Product
        </a>
    </div>
</div>

@section Scripts{ 
    <script src="~/lib/Chart.js/Chart.js"></script>
    <script>
        var config = {
            type: 'line',
            data: {
                labels: [
                    '@previous5WeekSunday.ToString("dd MMM")',
                    '@previous4WeekSunday.ToString("dd MMM")',
                    '@previous3WeekSunday.ToString("dd MMM")',
                    '@previous2WeekSunday.ToString("dd MMM")',
                    '@previous1WeekSunday.ToString("dd MMM")',
                    '@DateTime.Now.ToString("dd MMM")'],
                datasets:
                    [{
                        lineTension: 0.1,
                        label: 'Number of purchase',
                        fill: true,
                        backgroundColor: [
                            'rgba(193, 66, 146, 0.5)',
                        ],
                        borderColor: [
                            //#198754
                            //'rgba(126, 239, 104, 0.6)',
                            'rgba(25, 115, 84, 0.4)',
                        ],
                        data: [
                            @Model.Week5PurchaseCount,
                            @Model.Week4PurchaseCount,
                            @Model.Week3PurchaseCount,
                            @Model.Week2PurchaseCount,
                            @Model.Week1PurchaseCount,
                            @Model.CurrentWeekPurchaseCount,
                        ],
                    }],
            },
            options: {
                responsive: true,
                //title: {
                //    display: true,
                //    text: 'Items bought per week'
                //},
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'End of the week'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Quantity'
                        }
                    }]
                }
            }
        };

        window.onload = function () {
            var ctx = document.getElementById('myChart').getContext('2d');
            window.myLine = new Chart(ctx, config);
        };
    </script>
} 